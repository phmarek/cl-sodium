;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.12
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.

(in-package :sodium)



(cffi:defcfun ("sodium_init" #.(lispify "sodium_init" 'function)) :int)

(cffi:defcfun ("sodium_set_misuse_handler" #.(lispify "sodium_set_misuse_handler" 'function)) :int
  (handler :pointer))

(cffi:defcfun ("sodium_misuse" #.(lispify "sodium_misuse" 'function)) :void)

(cffi:defcfun ("crypto_auth_bytes" #.(lispify "crypto_auth_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_auth_keybytes" #.(lispify "crypto_auth_keybytes" 'function)) :pointer)

(define-string #.(lispify "crypto_auth_PRIMITIVE" 'constant) "hmacsha512256")

(cffi:defcfun ("crypto_auth_primitive" #.(lispify "crypto_auth_primitive" 'function)) :string)

(cffi:defcfun ("crypto_auth" #.(lispify "crypto_auth" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_auth_verify" #.(lispify "crypto_auth_verify" 'function)) :int
  (h :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_auth_keygen" #.(lispify "crypto_auth_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_auth_hmacsha256_BYTES" 'constant) 32)

(cffi:defcfun ("crypto_auth_hmacsha256_bytes" #.(lispify "crypto_auth_hmacsha256_bytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_auth_hmacsha256_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_auth_hmacsha256_keybytes" #.(lispify "crypto_auth_hmacsha256_keybytes" 'function)) :pointer)

(cffi:defcfun ("crypto_auth_hmacsha256" #.(lispify "crypto_auth_hmacsha256" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_auth_hmacsha256_verify" #.(lispify "crypto_auth_hmacsha256_verify" 'function)) :int
  (h :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcstruct #.(lispify "crypto_auth_hmacsha256_state" 'classname)
	(#.(lispify "ictx" 'slotname) :pointer)
	(#.(lispify "octx" 'slotname) :pointer))

(cffi:defcfun ("crypto_auth_hmacsha256_statebytes" #.(lispify "crypto_auth_hmacsha256_statebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_auth_hmacsha256_init" #.(lispify "crypto_auth_hmacsha256_init" 'function)) :int
  (state :pointer)
  (key :pointer)
  (keylen :pointer))

(cffi:defcfun ("crypto_auth_hmacsha256_update" #.(lispify "crypto_auth_hmacsha256_update" 'function)) :int
  (state :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(cffi:defcfun ("crypto_auth_hmacsha256_final" #.(lispify "crypto_auth_hmacsha256_final" 'function)) :int
  (state :pointer)
  (out :pointer))

(cffi:defcfun ("crypto_auth_hmacsha256_keygen" #.(lispify "crypto_auth_hmacsha256_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_auth_hmacsha512_BYTES" 'constant) 64)

(cffi:defcfun ("crypto_auth_hmacsha512_bytes" #.(lispify "crypto_auth_hmacsha512_bytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_auth_hmacsha512_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_auth_hmacsha512_keybytes" #.(lispify "crypto_auth_hmacsha512_keybytes" 'function)) :pointer)

(cffi:defcfun ("crypto_auth_hmacsha512" #.(lispify "crypto_auth_hmacsha512" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_auth_hmacsha512_verify" #.(lispify "crypto_auth_hmacsha512_verify" 'function)) :int
  (h :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcstruct #.(lispify "crypto_auth_hmacsha512_state" 'classname)
	(#.(lispify "ictx" 'slotname) :pointer)
	(#.(lispify "octx" 'slotname) :pointer))

(cffi:defcfun ("crypto_auth_hmacsha512_statebytes" #.(lispify "crypto_auth_hmacsha512_statebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_auth_hmacsha512_init" #.(lispify "crypto_auth_hmacsha512_init" 'function)) :int
  (state :pointer)
  (key :pointer)
  (keylen :pointer))

(cffi:defcfun ("crypto_auth_hmacsha512_update" #.(lispify "crypto_auth_hmacsha512_update" 'function)) :int
  (state :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(cffi:defcfun ("crypto_auth_hmacsha512_final" #.(lispify "crypto_auth_hmacsha512_final" 'function)) :int
  (state :pointer)
  (out :pointer))

(cffi:defcfun ("crypto_auth_hmacsha512_keygen" #.(lispify "crypto_auth_hmacsha512_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_auth_hmacsha512256_BYTES" 'constant) 32)

(cffi:defcfun ("crypto_auth_hmacsha512256_bytes" #.(lispify "crypto_auth_hmacsha512256_bytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_auth_hmacsha512256_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_auth_hmacsha512256_keybytes" #.(lispify "crypto_auth_hmacsha512256_keybytes" 'function)) :pointer)

(cffi:defcfun ("crypto_auth_hmacsha512256" #.(lispify "crypto_auth_hmacsha512256" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_auth_hmacsha512256_verify" #.(lispify "crypto_auth_hmacsha512256_verify" 'function)) :int
  (h :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_auth_hmacsha512256_statebytes" #.(lispify "crypto_auth_hmacsha512256_statebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_auth_hmacsha512256_init" #.(lispify "crypto_auth_hmacsha512256_init" 'function)) :int
  (state :pointer)
  (key :pointer)
  (keylen :pointer))

(cffi:defcfun ("crypto_auth_hmacsha512256_update" #.(lispify "crypto_auth_hmacsha512256_update" 'function)) :int
  (state :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(cffi:defcfun ("crypto_auth_hmacsha512256_final" #.(lispify "crypto_auth_hmacsha512256_final" 'function)) :int
  (state :pointer)
  (out :pointer))

(cffi:defcfun ("crypto_auth_hmacsha512256_keygen" #.(lispify "crypto_auth_hmacsha512256_keygen" 'function)) :void
  (k :pointer))

(cffi:defcfun ("crypto_box_seedbytes" #.(lispify "crypto_box_seedbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_box_publickeybytes" #.(lispify "crypto_box_publickeybytes" 'function)) :unsigned-long-long)

(cffi:defcfun ("crypto_box_secretkeybytes" #.(lispify "crypto_box_secretkeybytes" 'function)) :unsigned-long-long)

(cffi:defcfun ("crypto_box_noncebytes" #.(lispify "crypto_box_noncebytes" 'function)) :unsigned-long-long)

(cffi:defcfun ("crypto_box_macbytes" #.(lispify "crypto_box_macbytes" 'function)) :unsigned-long-long)

(cffi:defcfun ("crypto_box_messagebytes_max" #.(lispify "crypto_box_messagebytes_max" 'function)) :pointer)

(define-string #.(lispify "crypto_box_PRIMITIVE" 'constant) "curve25519xsalsa20poly1305")

(cffi:defcfun ("crypto_box_primitive" #.(lispify "crypto_box_primitive" 'function)) :string)

(cffi:defcfun ("crypto_box_seed_keypair" #.(lispify "crypto_box_seed_keypair" 'function)) :int
  (pk :pointer)
  (sk :pointer)
  (seed :pointer))

(cffi:defcfun ("crypto_box_keypair" #.(lispify "crypto_box_keypair" 'function)) :int
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_easy" #.(lispify "crypto_box_easy" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_open_easy" #.(lispify "crypto_box_open_easy" 'function)) :int
  (m :pointer)
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_detached" #.(lispify "crypto_box_detached" 'function)) :int
  (c :pointer)
  (mac :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_open_detached" #.(lispify "crypto_box_open_detached" 'function)) :int
  (m :pointer)
  (c :pointer)
  (mac :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_beforenmbytes" #.(lispify "crypto_box_beforenmbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_box_beforenm" #.(lispify "crypto_box_beforenm" 'function)) :int
  (k :pointer)
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_easy_afternm" #.(lispify "crypto_box_easy_afternm" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_box_open_easy_afternm" #.(lispify "crypto_box_open_easy_afternm" 'function)) :int
  (m :pointer)
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_box_detached_afternm" #.(lispify "crypto_box_detached_afternm" 'function)) :int
  (c :pointer)
  (mac :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_box_open_detached_afternm" #.(lispify "crypto_box_open_detached_afternm" 'function)) :int
  (m :pointer)
  (c :pointer)
  (mac :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_box_sealbytes" #.(lispify "crypto_box_sealbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_box_seal" #.(lispify "crypto_box_seal" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (pk :pointer))

(cffi:defcfun ("crypto_box_seal_open" #.(lispify "crypto_box_seal_open" 'function)) :int
  (m :pointer)
  (c :pointer)
  (clen :unsigned-long-long)
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_zerobytes" #.(lispify "crypto_box_zerobytes" 'function)) :pointer)

(cffi:defcfun ("crypto_box_boxzerobytes" #.(lispify "crypto_box_boxzerobytes" 'function)) :pointer)

(cffi:defcfun ("crypto_box" #.(lispify "crypto_box" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_open" #.(lispify "crypto_box_open" 'function)) :int
  (m :pointer)
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_afternm" #.(lispify "crypto_box_afternm" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_box_open_afternm" #.(lispify "crypto_box_open_afternm" 'function)) :int
  (m :pointer)
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cl:defconstant #.(lispify "crypto_box_curve25519xsalsa20poly1305_SEEDBYTES" 'constant) 32)

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_seedbytes" #.(lispify "crypto_box_curve25519xsalsa20poly1305_seedbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_publickeybytes" #.(lispify "crypto_box_curve25519xsalsa20poly1305_publickeybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_secretkeybytes" #.(lispify "crypto_box_curve25519xsalsa20poly1305_secretkeybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES" 'constant) 32)

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_beforenmbytes" #.(lispify "crypto_box_curve25519xsalsa20poly1305_beforenmbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_box_curve25519xsalsa20poly1305_NONCEBYTES" 'constant) 24)

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_noncebytes" #.(lispify "crypto_box_curve25519xsalsa20poly1305_noncebytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_box_curve25519xsalsa20poly1305_MACBYTES" 'constant) 16)

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_macbytes" #.(lispify "crypto_box_curve25519xsalsa20poly1305_macbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_messagebytes_max" #.(lispify "crypto_box_curve25519xsalsa20poly1305_messagebytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_seed_keypair" #.(lispify "crypto_box_curve25519xsalsa20poly1305_seed_keypair" 'function)) :int
  (pk :pointer)
  (sk :pointer)
  (seed :pointer))

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_keypair" #.(lispify "crypto_box_curve25519xsalsa20poly1305_keypair" 'function)) :int
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_beforenm" #.(lispify "crypto_box_curve25519xsalsa20poly1305_beforenm" 'function)) :int
  (k :pointer)
  (pk :pointer)
  (sk :pointer))

(cl:defconstant #.(lispify "crypto_box_curve25519xsalsa20poly1305_BOXZEROBYTES" 'constant) 16)

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_boxzerobytes" #.(lispify "crypto_box_curve25519xsalsa20poly1305_boxzerobytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_box_curve25519xsalsa20poly1305_ZEROBYTES" 'constant) (cl:+ 16 16))

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_zerobytes" #.(lispify "crypto_box_curve25519xsalsa20poly1305_zerobytes" 'function)) :pointer)

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305" #.(lispify "crypto_box_curve25519xsalsa20poly1305" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_open" #.(lispify "crypto_box_curve25519xsalsa20poly1305_open" 'function)) :int
  (m :pointer)
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_afternm" #.(lispify "crypto_box_curve25519xsalsa20poly1305_afternm" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_box_curve25519xsalsa20poly1305_open_afternm" #.(lispify "crypto_box_curve25519xsalsa20poly1305_open_afternm" 'function)) :int
  (m :pointer)
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cl:defconstant #.(lispify "crypto_core_hsalsa20_OUTPUTBYTES" 'constant) 32)

(cffi:defcfun ("crypto_core_hsalsa20_outputbytes" #.(lispify "crypto_core_hsalsa20_outputbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_hsalsa20_INPUTBYTES" 'constant) 16)

(cffi:defcfun ("crypto_core_hsalsa20_inputbytes" #.(lispify "crypto_core_hsalsa20_inputbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_hsalsa20_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_core_hsalsa20_keybytes" #.(lispify "crypto_core_hsalsa20_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_hsalsa20_CONSTBYTES" 'constant) 16)

(cffi:defcfun ("crypto_core_hsalsa20_constbytes" #.(lispify "crypto_core_hsalsa20_constbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_core_hsalsa20" #.(lispify "crypto_core_hsalsa20" 'function)) :int
  (out :pointer)
  (in :pointer)
  (k :pointer)
  (c :pointer))

(cl:defconstant #.(lispify "crypto_core_salsa20_OUTPUTBYTES" 'constant) 64)

(cffi:defcfun ("crypto_core_salsa20_outputbytes" #.(lispify "crypto_core_salsa20_outputbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_salsa20_INPUTBYTES" 'constant) 16)

(cffi:defcfun ("crypto_core_salsa20_inputbytes" #.(lispify "crypto_core_salsa20_inputbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_salsa20_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_core_salsa20_keybytes" #.(lispify "crypto_core_salsa20_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_salsa20_CONSTBYTES" 'constant) 16)

(cffi:defcfun ("crypto_core_salsa20_constbytes" #.(lispify "crypto_core_salsa20_constbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_core_salsa20" #.(lispify "crypto_core_salsa20" 'function)) :int
  (out :pointer)
  (in :pointer)
  (k :pointer)
  (c :pointer))

(cl:defconstant #.(lispify "crypto_core_salsa2012_OUTPUTBYTES" 'constant) 64)

(cffi:defcfun ("crypto_core_salsa2012_outputbytes" #.(lispify "crypto_core_salsa2012_outputbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_salsa2012_INPUTBYTES" 'constant) 16)

(cffi:defcfun ("crypto_core_salsa2012_inputbytes" #.(lispify "crypto_core_salsa2012_inputbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_salsa2012_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_core_salsa2012_keybytes" #.(lispify "crypto_core_salsa2012_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_salsa2012_CONSTBYTES" 'constant) 16)

(cffi:defcfun ("crypto_core_salsa2012_constbytes" #.(lispify "crypto_core_salsa2012_constbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_core_salsa2012" #.(lispify "crypto_core_salsa2012" 'function)) :int
  (out :pointer)
  (in :pointer)
  (k :pointer)
  (c :pointer))

(cl:defconstant #.(lispify "crypto_core_salsa208_OUTPUTBYTES" 'constant) 64)

(cffi:defcfun ("crypto_core_salsa208_outputbytes" #.(lispify "crypto_core_salsa208_outputbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_salsa208_INPUTBYTES" 'constant) 16)

(cffi:defcfun ("crypto_core_salsa208_inputbytes" #.(lispify "crypto_core_salsa208_inputbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_salsa208_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_core_salsa208_keybytes" #.(lispify "crypto_core_salsa208_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_core_salsa208_CONSTBYTES" 'constant) 16)

(cffi:defcfun ("crypto_core_salsa208_constbytes" #.(lispify "crypto_core_salsa208_constbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_core_salsa208" #.(lispify "crypto_core_salsa208" 'function)) :int
  (out :pointer)
  (in :pointer)
  (k :pointer)
  (c :pointer))

(cffi:defcfun ("crypto_generichash_bytes_min" #.(lispify "crypto_generichash_bytes_min" 'function)) :pointer)

(cffi:defcfun ("crypto_generichash_bytes_max" #.(lispify "crypto_generichash_bytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_generichash_bytes" #.(lispify "crypto_generichash_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_generichash_keybytes_min" #.(lispify "crypto_generichash_keybytes_min" 'function)) :pointer)

(cffi:defcfun ("crypto_generichash_keybytes_max" #.(lispify "crypto_generichash_keybytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_generichash_keybytes" #.(lispify "crypto_generichash_keybytes" 'function)) :pointer)

(define-string #.(lispify "crypto_generichash_PRIMITIVE" 'constant) "blake2b")

(cffi:defcfun ("crypto_generichash_primitive" #.(lispify "crypto_generichash_primitive" 'function)) :string)

(cffi:defcfun ("crypto_generichash_statebytes" #.(lispify "crypto_generichash_statebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_generichash" #.(lispify "crypto_generichash" 'function)) :int
  (out :pointer)
  (outlen :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (key :pointer)
  (keylen :pointer))

(cffi:defcfun ("crypto_generichash_init" #.(lispify "crypto_generichash_init" 'function)) :int
  (state :pointer)
  (key :pointer)
  (keylen :pointer)
  (outlen :pointer))

(cffi:defcfun ("crypto_generichash_update" #.(lispify "crypto_generichash_update" 'function)) :int
  (state :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(cffi:defcfun ("crypto_generichash_final" #.(lispify "crypto_generichash_final" 'function)) :int
  (state :pointer)
  (out :pointer)
  (outlen :pointer))

(cffi:defcfun ("crypto_generichash_keygen" #.(lispify "crypto_generichash_keygen" 'function)) :void
  (k :pointer))

(cffi:defcstruct #.(lispify "crypto_generichash_blake2b_state" 'classname)
	(#.(lispify "opaque" 'slotname) :pointer :count 384))

(cl:defconstant #.(lispify "crypto_generichash_blake2b_BYTES_MIN" 'constant) 16)

(cffi:defcfun ("crypto_generichash_blake2b_bytes_min" #.(lispify "crypto_generichash_blake2b_bytes_min" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_generichash_blake2b_BYTES_MAX" 'constant) 64)

(cffi:defcfun ("crypto_generichash_blake2b_bytes_max" #.(lispify "crypto_generichash_blake2b_bytes_max" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_generichash_blake2b_BYTES" 'constant) 32)

(cffi:defcfun ("crypto_generichash_blake2b_bytes" #.(lispify "crypto_generichash_blake2b_bytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_generichash_blake2b_KEYBYTES_MIN" 'constant) 16)

(cffi:defcfun ("crypto_generichash_blake2b_keybytes_min" #.(lispify "crypto_generichash_blake2b_keybytes_min" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_generichash_blake2b_KEYBYTES_MAX" 'constant) 64)

(cffi:defcfun ("crypto_generichash_blake2b_keybytes_max" #.(lispify "crypto_generichash_blake2b_keybytes_max" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_generichash_blake2b_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_generichash_blake2b_keybytes" #.(lispify "crypto_generichash_blake2b_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_generichash_blake2b_SALTBYTES" 'constant) 16)

(cffi:defcfun ("crypto_generichash_blake2b_saltbytes" #.(lispify "crypto_generichash_blake2b_saltbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_generichash_blake2b_PERSONALBYTES" 'constant) 16)

(cffi:defcfun ("crypto_generichash_blake2b_personalbytes" #.(lispify "crypto_generichash_blake2b_personalbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_generichash_blake2b_statebytes" #.(lispify "crypto_generichash_blake2b_statebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_generichash_blake2b" #.(lispify "crypto_generichash_blake2b" 'function)) :int
  (out :pointer)
  (outlen :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (key :pointer)
  (keylen :pointer))

(cffi:defcfun ("crypto_generichash_blake2b_salt_personal" #.(lispify "crypto_generichash_blake2b_salt_personal" 'function)) :int
  (out :pointer)
  (outlen :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (key :pointer)
  (keylen :pointer)
  (salt :pointer)
  (personal :pointer))

(cffi:defcfun ("crypto_generichash_blake2b_init" #.(lispify "crypto_generichash_blake2b_init" 'function)) :int
  (state :pointer)
  (key :pointer)
  (keylen :pointer)
  (outlen :pointer))

(cffi:defcfun ("crypto_generichash_blake2b_init_salt_personal" #.(lispify "crypto_generichash_blake2b_init_salt_personal" 'function)) :int
  (state :pointer)
  (key :pointer)
  (keylen :pointer)
  (outlen :pointer)
  (salt :pointer)
  (personal :pointer))

(cffi:defcfun ("crypto_generichash_blake2b_update" #.(lispify "crypto_generichash_blake2b_update" 'function)) :int
  (state :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(cffi:defcfun ("crypto_generichash_blake2b_final" #.(lispify "crypto_generichash_blake2b_final" 'function)) :int
  (state :pointer)
  (out :pointer)
  (outlen :pointer))

(cffi:defcfun ("crypto_generichash_blake2b_keygen" #.(lispify "crypto_generichash_blake2b_keygen" 'function)) :void
  (k :pointer))

(cffi:defcfun ("crypto_hash_bytes" #.(lispify "crypto_hash_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_hash" #.(lispify "crypto_hash" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(define-string #.(lispify "crypto_hash_PRIMITIVE" 'constant) "sha512")

(cffi:defcfun ("crypto_hash_primitive" #.(lispify "crypto_hash_primitive" 'function)) :string)

(cffi:defcstruct #.(lispify "crypto_hash_sha256_state" 'classname)
	(#.(lispify "state" 'slotname) :pointer :count 8)
	(#.(lispify "count" 'slotname) :pointer)
	(#.(lispify "buf" 'slotname) :pointer :count 64))

(cffi:defcfun ("crypto_hash_sha256_statebytes" #.(lispify "crypto_hash_sha256_statebytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_hash_sha256_BYTES" 'constant) 32)

(cffi:defcfun ("crypto_hash_sha256_bytes" #.(lispify "crypto_hash_sha256_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_hash_sha256" #.(lispify "crypto_hash_sha256" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(cffi:defcfun ("crypto_hash_sha256_init" #.(lispify "crypto_hash_sha256_init" 'function)) :int
  (state :pointer))

(cffi:defcfun ("crypto_hash_sha256_update" #.(lispify "crypto_hash_sha256_update" 'function)) :int
  (state :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(cffi:defcfun ("crypto_hash_sha256_final" #.(lispify "crypto_hash_sha256_final" 'function)) :int
  (state :pointer)
  (out :pointer))

(cffi:defcstruct #.(lispify "crypto_hash_sha512_state" 'classname)
	(#.(lispify "state" 'slotname) :pointer :count 8)
	(#.(lispify "count" 'slotname) :pointer :count 2)
	(#.(lispify "buf" 'slotname) :pointer :count 128))

(cffi:defcfun ("crypto_hash_sha512_statebytes" #.(lispify "crypto_hash_sha512_statebytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_hash_sha512_BYTES" 'constant) 64)

(cffi:defcfun ("crypto_hash_sha512_bytes" #.(lispify "crypto_hash_sha512_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_hash_sha512" #.(lispify "crypto_hash_sha512" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(cffi:defcfun ("crypto_hash_sha512_init" #.(lispify "crypto_hash_sha512_init" 'function)) :int
  (state :pointer))

(cffi:defcfun ("crypto_hash_sha512_update" #.(lispify "crypto_hash_sha512_update" 'function)) :int
  (state :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(cffi:defcfun ("crypto_hash_sha512_final" #.(lispify "crypto_hash_sha512_final" 'function)) :int
  (state :pointer)
  (out :pointer))

(cffi:defcfun ("crypto_onetimeauth_statebytes" #.(lispify "crypto_onetimeauth_statebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_onetimeauth_bytes" #.(lispify "crypto_onetimeauth_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_onetimeauth_keybytes" #.(lispify "crypto_onetimeauth_keybytes" 'function)) :pointer)

(define-string #.(lispify "crypto_onetimeauth_PRIMITIVE" 'constant) "poly1305")

(cffi:defcfun ("crypto_onetimeauth_primitive" #.(lispify "crypto_onetimeauth_primitive" 'function)) :string)

(cffi:defcfun ("crypto_onetimeauth" #.(lispify "crypto_onetimeauth" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_onetimeauth_verify" #.(lispify "crypto_onetimeauth_verify" 'function)) :int
  (h :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_onetimeauth_init" #.(lispify "crypto_onetimeauth_init" 'function)) :int
  (state :pointer)
  (key :pointer))

(cffi:defcfun ("crypto_onetimeauth_update" #.(lispify "crypto_onetimeauth_update" 'function)) :int
  (state :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(cffi:defcfun ("crypto_onetimeauth_final" #.(lispify "crypto_onetimeauth_final" 'function)) :int
  (state :pointer)
  (out :pointer))

(cffi:defcfun ("crypto_onetimeauth_keygen" #.(lispify "crypto_onetimeauth_keygen" 'function)) :void
  (k :pointer))

(cffi:defcstruct #.(lispify "crypto_onetimeauth_poly1305_state" 'classname)
	(#.(lispify "opaque" 'slotname) :pointer :count 256))

(cffi:defcfun ("crypto_onetimeauth_poly1305_statebytes" #.(lispify "crypto_onetimeauth_poly1305_statebytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_onetimeauth_poly1305_BYTES" 'constant) 16)

(cffi:defcfun ("crypto_onetimeauth_poly1305_bytes" #.(lispify "crypto_onetimeauth_poly1305_bytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_onetimeauth_poly1305_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_onetimeauth_poly1305_keybytes" #.(lispify "crypto_onetimeauth_poly1305_keybytes" 'function)) :pointer)

(cffi:defcfun ("crypto_onetimeauth_poly1305" #.(lispify "crypto_onetimeauth_poly1305" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_onetimeauth_poly1305_verify" #.(lispify "crypto_onetimeauth_poly1305_verify" 'function)) :int
  (h :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_onetimeauth_poly1305_init" #.(lispify "crypto_onetimeauth_poly1305_init" 'function)) :int
  (state :pointer)
  (key :pointer))

(cffi:defcfun ("crypto_onetimeauth_poly1305_update" #.(lispify "crypto_onetimeauth_poly1305_update" 'function)) :int
  (state :pointer)
  (in :pointer)
  (inlen :unsigned-long-long))

(cffi:defcfun ("crypto_onetimeauth_poly1305_final" #.(lispify "crypto_onetimeauth_poly1305_final" 'function)) :int
  (state :pointer)
  (out :pointer))

(cffi:defcfun ("crypto_onetimeauth_poly1305_keygen" #.(lispify "crypto_onetimeauth_poly1305_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_pwhash_scryptsalsa208sha256_BYTES_MIN" 'constant) 16)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_bytes_min" #.(lispify "crypto_pwhash_scryptsalsa208sha256_bytes_min" 'function)) :pointer)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_bytes_max" #.(lispify "crypto_pwhash_scryptsalsa208sha256_bytes_max" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_pwhash_scryptsalsa208sha256_PASSWD_MIN" 'constant) 0)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_passwd_min" #.(lispify "crypto_pwhash_scryptsalsa208sha256_passwd_min" 'function)) :pointer)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_passwd_max" #.(lispify "crypto_pwhash_scryptsalsa208sha256_passwd_max" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_pwhash_scryptsalsa208sha256_SALTBYTES" 'constant) 32)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_saltbytes" #.(lispify "crypto_pwhash_scryptsalsa208sha256_saltbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_pwhash_scryptsalsa208sha256_STRBYTES" 'constant) 102)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_strbytes" #.(lispify "crypto_pwhash_scryptsalsa208sha256_strbytes" 'function)) :pointer)

(define-string #.(lispify "crypto_pwhash_scryptsalsa208sha256_STRPREFIX" 'constant) "$7$")

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_strprefix" #.(lispify "crypto_pwhash_scryptsalsa208sha256_strprefix" 'function)) :string)

(cl:defconstant #.(lispify "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN" 'constant) 32768)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_opslimit_min" #.(lispify "crypto_pwhash_scryptsalsa208sha256_opslimit_min" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX" 'constant) 4294967295)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_opslimit_max" #.(lispify "crypto_pwhash_scryptsalsa208sha256_opslimit_max" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN" 'constant) 16777216)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_memlimit_min" #.(lispify "crypto_pwhash_scryptsalsa208sha256_memlimit_min" 'function)) :pointer)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_memlimit_max" #.(lispify "crypto_pwhash_scryptsalsa208sha256_memlimit_max" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE" 'constant) 524288)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_opslimit_interactive" #.(lispify "crypto_pwhash_scryptsalsa208sha256_opslimit_interactive" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE" 'constant) 16777216)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_memlimit_interactive" #.(lispify "crypto_pwhash_scryptsalsa208sha256_memlimit_interactive" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE" 'constant) 33554432)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive" #.(lispify "crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE" 'constant) 1073741824)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive" #.(lispify "crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive" 'function)) :pointer)

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256" #.(lispify "crypto_pwhash_scryptsalsa208sha256" 'function)) :int
  (out :pointer)
  (outlen :unsigned-long-long)
  (passwd :string)
  (passwdlen :unsigned-long-long)
  (salt :pointer)
  (opslimit :unsigned-long-long)
  (memlimit :pointer))

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_str" #.(lispify "crypto_pwhash_scryptsalsa208sha256_str" 'function)) :int
  (out :pointer)
  (passwd :string)
  (passwdlen :unsigned-long-long)
  (opslimit :unsigned-long-long)
  (memlimit :pointer))

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_str_verify" #.(lispify "crypto_pwhash_scryptsalsa208sha256_str_verify" 'function)) :int
  (str :pointer)
  (passwd :string)
  (passwdlen :unsigned-long-long))

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_ll" #.(lispify "crypto_pwhash_scryptsalsa208sha256_ll" 'function)) :int
  (passwd :pointer)
  (passwdlen :pointer)
  (salt :pointer)
  (saltlen :pointer)
  (N :pointer)
  (r :pointer)
  (p :pointer)
  (buf :pointer)
  (buflen :pointer))

(cffi:defcfun ("crypto_pwhash_scryptsalsa208sha256_str_needs_rehash" #.(lispify "crypto_pwhash_scryptsalsa208sha256_str_needs_rehash" 'function)) :int
  (str :pointer)
  (opslimit :unsigned-long-long)
  (memlimit :pointer))

(cffi:defcfun ("crypto_scalarmult_bytes" #.(lispify "crypto_scalarmult_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_scalarmult_scalarbytes" #.(lispify "crypto_scalarmult_scalarbytes" 'function)) :pointer)

(define-string #.(lispify "crypto_scalarmult_PRIMITIVE" 'constant) "curve25519")

(cffi:defcfun ("crypto_scalarmult_primitive" #.(lispify "crypto_scalarmult_primitive" 'function)) :string)

(cffi:defcfun ("crypto_scalarmult_base" #.(lispify "crypto_scalarmult_base" 'function)) :int
  (q :pointer)
  (n :pointer))

(cffi:defcfun ("crypto_scalarmult" #.(lispify "crypto_scalarmult" 'function)) :int
  (q :pointer)
  (n :pointer)
  (p :pointer))

(cl:defconstant #.(lispify "crypto_scalarmult_curve25519_BYTES" 'constant) 32)

(cffi:defcfun ("crypto_scalarmult_curve25519_bytes" #.(lispify "crypto_scalarmult_curve25519_bytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_scalarmult_curve25519_SCALARBYTES" 'constant) 32)

(cffi:defcfun ("crypto_scalarmult_curve25519_scalarbytes" #.(lispify "crypto_scalarmult_curve25519_scalarbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_scalarmult_curve25519" #.(lispify "crypto_scalarmult_curve25519" 'function)) :int
  (q :pointer)
  (n :pointer)
  (p :pointer))

(cffi:defcfun ("crypto_scalarmult_curve25519_base" #.(lispify "crypto_scalarmult_curve25519_base" 'function)) :int
  (q :pointer)
  (n :pointer))

(cffi:defcfun ("crypto_secretbox_keybytes" #.(lispify "crypto_secretbox_keybytes" 'function)) :unsigned-long-long)

(cffi:defcfun ("crypto_secretbox_noncebytes" #.(lispify "crypto_secretbox_noncebytes" 'function)) :unsigned-long-long)

(cffi:defcfun ("crypto_secretbox_macbytes" #.(lispify "crypto_secretbox_macbytes" 'function)) :unsigned-long-long)

(define-string #.(lispify "crypto_secretbox_PRIMITIVE" 'constant) "xsalsa20poly1305")

(cffi:defcfun ("crypto_secretbox_primitive" #.(lispify "crypto_secretbox_primitive" 'function)) :string)

(cffi:defcfun ("crypto_secretbox_messagebytes_max" #.(lispify "crypto_secretbox_messagebytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_secretbox_easy" #.(lispify "crypto_secretbox_easy" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_secretbox_open_easy" #.(lispify "crypto_secretbox_open_easy" 'function)) :int
  (m :pointer)
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_secretbox_detached" #.(lispify "crypto_secretbox_detached" 'function)) :int
  (c :pointer)
  (mac :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_secretbox_open_detached" #.(lispify "crypto_secretbox_open_detached" 'function)) :int
  (m :pointer)
  (c :pointer)
  (mac :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_secretbox_keygen" #.(lispify "crypto_secretbox_keygen" 'function)) :void
  (k :pointer))

(cffi:defcfun ("crypto_secretbox_zerobytes" #.(lispify "crypto_secretbox_zerobytes" 'function)) :pointer)

(cffi:defcfun ("crypto_secretbox_boxzerobytes" #.(lispify "crypto_secretbox_boxzerobytes" 'function)) :pointer)

(cffi:defcfun ("crypto_secretbox" #.(lispify "crypto_secretbox" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_secretbox_open" #.(lispify "crypto_secretbox_open" 'function)) :int
  (m :pointer)
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cl:defconstant #.(lispify "crypto_secretbox_xsalsa20poly1305_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_secretbox_xsalsa20poly1305_keybytes" #.(lispify "crypto_secretbox_xsalsa20poly1305_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_secretbox_xsalsa20poly1305_NONCEBYTES" 'constant) 24)

(cffi:defcfun ("crypto_secretbox_xsalsa20poly1305_noncebytes" #.(lispify "crypto_secretbox_xsalsa20poly1305_noncebytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_secretbox_xsalsa20poly1305_MACBYTES" 'constant) 16)

(cffi:defcfun ("crypto_secretbox_xsalsa20poly1305_macbytes" #.(lispify "crypto_secretbox_xsalsa20poly1305_macbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_secretbox_xsalsa20poly1305_messagebytes_max" #.(lispify "crypto_secretbox_xsalsa20poly1305_messagebytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_secretbox_xsalsa20poly1305" #.(lispify "crypto_secretbox_xsalsa20poly1305" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_secretbox_xsalsa20poly1305_open" #.(lispify "crypto_secretbox_xsalsa20poly1305_open" 'function)) :int
  (m :pointer)
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_secretbox_xsalsa20poly1305_keygen" #.(lispify "crypto_secretbox_xsalsa20poly1305_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_secretbox_xsalsa20poly1305_BOXZEROBYTES" 'constant) 16)

(cffi:defcfun ("crypto_secretbox_xsalsa20poly1305_boxzerobytes" #.(lispify "crypto_secretbox_xsalsa20poly1305_boxzerobytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_secretbox_xsalsa20poly1305_ZEROBYTES" 'constant) (cl:+ 16 16))

(cffi:defcfun ("crypto_secretbox_xsalsa20poly1305_zerobytes" #.(lispify "crypto_secretbox_xsalsa20poly1305_zerobytes" 'function)) :pointer)

(cffi:defcfun ("crypto_shorthash_bytes" #.(lispify "crypto_shorthash_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_shorthash_keybytes" #.(lispify "crypto_shorthash_keybytes" 'function)) :pointer)

(define-string #.(lispify "crypto_shorthash_PRIMITIVE" 'constant) "siphash24")

(cffi:defcfun ("crypto_shorthash_primitive" #.(lispify "crypto_shorthash_primitive" 'function)) :string)

(cffi:defcfun ("crypto_shorthash" #.(lispify "crypto_shorthash" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_shorthash_keygen" #.(lispify "crypto_shorthash_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_shorthash_siphash24_BYTES" 'constant) 8)

(cffi:defcfun ("crypto_shorthash_siphash24_bytes" #.(lispify "crypto_shorthash_siphash24_bytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_shorthash_siphash24_KEYBYTES" 'constant) 16)

(cffi:defcfun ("crypto_shorthash_siphash24_keybytes" #.(lispify "crypto_shorthash_siphash24_keybytes" 'function)) :pointer)

(cffi:defcfun ("crypto_shorthash_siphash24" #.(lispify "crypto_shorthash_siphash24" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cl:defconstant #.(lispify "crypto_shorthash_siphashx24_BYTES" 'constant) 16)

(cffi:defcfun ("crypto_shorthash_siphashx24_bytes" #.(lispify "crypto_shorthash_siphashx24_bytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_shorthash_siphashx24_KEYBYTES" 'constant) 16)

(cffi:defcfun ("crypto_shorthash_siphashx24_keybytes" #.(lispify "crypto_shorthash_siphashx24_keybytes" 'function)) :pointer)

(cffi:defcfun ("crypto_shorthash_siphashx24" #.(lispify "crypto_shorthash_siphashx24" 'function)) :int
  (out :pointer)
  (in :pointer)
  (inlen :unsigned-long-long)
  (k :pointer))

(cffi:defcfun ("crypto_sign_statebytes" #.(lispify "crypto_sign_statebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_sign_bytes" #.(lispify "crypto_sign_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_sign_seedbytes" #.(lispify "crypto_sign_seedbytes" 'function)) :pointer)

(cffi:defcfun ("crypto_sign_publickeybytes" #.(lispify "crypto_sign_publickeybytes" 'function)) :pointer)

(cffi:defcfun ("crypto_sign_secretkeybytes" #.(lispify "crypto_sign_secretkeybytes" 'function)) :pointer)

(cffi:defcfun ("crypto_sign_messagebytes_max" #.(lispify "crypto_sign_messagebytes_max" 'function)) :pointer)

(define-string #.(lispify "crypto_sign_PRIMITIVE" 'constant) "ed25519")

(cffi:defcfun ("crypto_sign_primitive" #.(lispify "crypto_sign_primitive" 'function)) :string)

(cffi:defcfun ("crypto_sign_seed_keypair" #.(lispify "crypto_sign_seed_keypair" 'function)) :int
  (pk :pointer)
  (sk :pointer)
  (seed :pointer))

(cffi:defcfun ("crypto_sign_keypair" #.(lispify "crypto_sign_keypair" 'function)) :int
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_sign" #.(lispify "crypto_sign" 'function)) :int
  (sm :pointer)
  (smlen_p :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (sk :pointer))

(cffi:defcfun ("crypto_sign_open" #.(lispify "crypto_sign_open" 'function)) :int
  (m :pointer)
  (mlen_p :pointer)
  (sm :pointer)
  (smlen :unsigned-long-long)
  (pk :pointer))

(cffi:defcfun ("crypto_sign_detached" #.(lispify "crypto_sign_detached" 'function)) :int
  (sig :pointer)
  (siglen_p :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (sk :pointer))

(cffi:defcfun ("crypto_sign_verify_detached" #.(lispify "crypto_sign_verify_detached" 'function)) :int
  (sig :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (pk :pointer))

(cffi:defcfun ("crypto_sign_init" #.(lispify "crypto_sign_init" 'function)) :int
  (state :pointer))

(cffi:defcfun ("crypto_sign_update" #.(lispify "crypto_sign_update" 'function)) :int
  (state :pointer)
  (m :pointer)
  (mlen :unsigned-long-long))

(cffi:defcfun ("crypto_sign_final_create" #.(lispify "crypto_sign_final_create" 'function)) :int
  (state :pointer)
  (sig :pointer)
  (siglen_p :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_sign_final_verify" #.(lispify "crypto_sign_final_verify" 'function)) :int
  (state :pointer)
  (sig :pointer)
  (pk :pointer))

(cffi:defcstruct #.(lispify "crypto_sign_ed25519ph_state" 'classname)
	(#.(lispify "hs" 'slotname) #.(lispify "crypto_hash_sha512_state" 'classname)))

(cffi:defcfun ("crypto_sign_ed25519ph_statebytes" #.(lispify "crypto_sign_ed25519ph_statebytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_sign_ed25519_BYTES" 'constant) 64)

(cffi:defcfun ("crypto_sign_ed25519_bytes" #.(lispify "crypto_sign_ed25519_bytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_sign_ed25519_SEEDBYTES" 'constant) 32)

(cffi:defcfun ("crypto_sign_ed25519_seedbytes" #.(lispify "crypto_sign_ed25519_seedbytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_sign_ed25519_PUBLICKEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_sign_ed25519_publickeybytes" #.(lispify "crypto_sign_ed25519_publickeybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_sign_ed25519_SECRETKEYBYTES" 'constant) (cl:+ 32 32))

(cffi:defcfun ("crypto_sign_ed25519_secretkeybytes" #.(lispify "crypto_sign_ed25519_secretkeybytes" 'function)) :pointer)

(cffi:defcfun ("crypto_sign_ed25519_messagebytes_max" #.(lispify "crypto_sign_ed25519_messagebytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_sign_ed25519" #.(lispify "crypto_sign_ed25519" 'function)) :int
  (sm :pointer)
  (smlen_p :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (sk :pointer))

(cffi:defcfun ("crypto_sign_ed25519_open" #.(lispify "crypto_sign_ed25519_open" 'function)) :int
  (m :pointer)
  (mlen_p :pointer)
  (sm :pointer)
  (smlen :unsigned-long-long)
  (pk :pointer))

(cffi:defcfun ("crypto_sign_ed25519_detached" #.(lispify "crypto_sign_ed25519_detached" 'function)) :int
  (sig :pointer)
  (siglen_p :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (sk :pointer))

(cffi:defcfun ("crypto_sign_ed25519_verify_detached" #.(lispify "crypto_sign_ed25519_verify_detached" 'function)) :int
  (sig :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (pk :pointer))

(cffi:defcfun ("crypto_sign_ed25519_keypair" #.(lispify "crypto_sign_ed25519_keypair" 'function)) :int
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_sign_ed25519_seed_keypair" #.(lispify "crypto_sign_ed25519_seed_keypair" 'function)) :int
  (pk :pointer)
  (sk :pointer)
  (seed :pointer))

(cffi:defcfun ("crypto_sign_ed25519_pk_to_curve25519" #.(lispify "crypto_sign_ed25519_pk_to_curve25519" 'function)) :int
  (curve25519_pk :pointer)
  (ed25519_pk :pointer))

(cffi:defcfun ("crypto_sign_ed25519_sk_to_curve25519" #.(lispify "crypto_sign_ed25519_sk_to_curve25519" 'function)) :int
  (curve25519_sk :pointer)
  (ed25519_sk :pointer))

(cffi:defcfun ("crypto_sign_ed25519_sk_to_seed" #.(lispify "crypto_sign_ed25519_sk_to_seed" 'function)) :int
  (seed :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_sign_ed25519_sk_to_pk" #.(lispify "crypto_sign_ed25519_sk_to_pk" 'function)) :int
  (pk :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_sign_ed25519ph_init" #.(lispify "crypto_sign_ed25519ph_init" 'function)) :int
  (state :pointer))

(cffi:defcfun ("crypto_sign_ed25519ph_update" #.(lispify "crypto_sign_ed25519ph_update" 'function)) :int
  (state :pointer)
  (m :pointer)
  (mlen :unsigned-long-long))

(cffi:defcfun ("crypto_sign_ed25519ph_final_create" #.(lispify "crypto_sign_ed25519ph_final_create" 'function)) :int
  (state :pointer)
  (sig :pointer)
  (siglen_p :pointer)
  (sk :pointer))

(cffi:defcfun ("crypto_sign_ed25519ph_final_verify" #.(lispify "crypto_sign_ed25519ph_final_verify" 'function)) :int
  (state :pointer)
  (sig :pointer)
  (pk :pointer))

(cffi:defcfun ("crypto_stream_keybytes" #.(lispify "crypto_stream_keybytes" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_noncebytes" #.(lispify "crypto_stream_noncebytes" 'function)) :unsigned-long-long)

(cffi:defcfun ("crypto_stream_messagebytes_max" #.(lispify "crypto_stream_messagebytes_max" 'function)) :pointer)

(define-string #.(lispify "crypto_stream_PRIMITIVE" 'constant) "xsalsa20")

(cffi:defcfun ("crypto_stream_primitive" #.(lispify "crypto_stream_primitive" 'function)) :string)

(cffi:defcfun ("crypto_stream" #.(lispify "crypto_stream" 'function)) :int
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_xor" #.(lispify "crypto_stream_xor" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_keygen" #.(lispify "crypto_stream_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_stream_chacha20_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_stream_chacha20_keybytes" #.(lispify "crypto_stream_chacha20_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_stream_chacha20_NONCEBYTES" 'constant) 8)

(cffi:defcfun ("crypto_stream_chacha20_noncebytes" #.(lispify "crypto_stream_chacha20_noncebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_chacha20_messagebytes_max" #.(lispify "crypto_stream_chacha20_messagebytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_chacha20" #.(lispify "crypto_stream_chacha20" 'function)) :int
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_chacha20_xor" #.(lispify "crypto_stream_chacha20_xor" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_chacha20_xor_ic" #.(lispify "crypto_stream_chacha20_xor_ic" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (ic :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_chacha20_keygen" #.(lispify "crypto_stream_chacha20_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_stream_chacha20_ietf_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_stream_chacha20_ietf_keybytes" #.(lispify "crypto_stream_chacha20_ietf_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_stream_chacha20_ietf_NONCEBYTES" 'constant) 12)

(cffi:defcfun ("crypto_stream_chacha20_ietf_noncebytes" #.(lispify "crypto_stream_chacha20_ietf_noncebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_chacha20_ietf_messagebytes_max" #.(lispify "crypto_stream_chacha20_ietf_messagebytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_chacha20_ietf" #.(lispify "crypto_stream_chacha20_ietf" 'function)) :int
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_chacha20_ietf_xor" #.(lispify "crypto_stream_chacha20_ietf_xor" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_chacha20_ietf_xor_ic" #.(lispify "crypto_stream_chacha20_ietf_xor_ic" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (ic :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_chacha20_ietf_keygen" #.(lispify "crypto_stream_chacha20_ietf_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_stream_chacha20_IETF_KEYBYTES" 'constant) 32)

(cl:defconstant #.(lispify "crypto_stream_chacha20_IETF_NONCEBYTES" 'constant) 12)

(cl:defconstant #.(lispify "crypto_stream_salsa20_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_stream_salsa20_keybytes" #.(lispify "crypto_stream_salsa20_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_stream_salsa20_NONCEBYTES" 'constant) 8)

(cffi:defcfun ("crypto_stream_salsa20_noncebytes" #.(lispify "crypto_stream_salsa20_noncebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_salsa20_messagebytes_max" #.(lispify "crypto_stream_salsa20_messagebytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_salsa20" #.(lispify "crypto_stream_salsa20" 'function)) :int
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_salsa20_xor" #.(lispify "crypto_stream_salsa20_xor" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_salsa20_xor_ic" #.(lispify "crypto_stream_salsa20_xor_ic" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (ic :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_salsa20_keygen" #.(lispify "crypto_stream_salsa20_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_stream_salsa2012_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_stream_salsa2012_keybytes" #.(lispify "crypto_stream_salsa2012_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_stream_salsa2012_NONCEBYTES" 'constant) 8)

(cffi:defcfun ("crypto_stream_salsa2012_noncebytes" #.(lispify "crypto_stream_salsa2012_noncebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_salsa2012_messagebytes_max" #.(lispify "crypto_stream_salsa2012_messagebytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_salsa2012" #.(lispify "crypto_stream_salsa2012" 'function)) :int
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_salsa2012_xor" #.(lispify "crypto_stream_salsa2012_xor" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_salsa2012_keygen" #.(lispify "crypto_stream_salsa2012_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_stream_salsa208_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_stream_salsa208_keybytes" #.(lispify "crypto_stream_salsa208_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_stream_salsa208_NONCEBYTES" 'constant) 8)

(cffi:defcfun ("crypto_stream_salsa208_noncebytes" #.(lispify "crypto_stream_salsa208_noncebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_salsa208_messagebytes_max" #.(lispify "crypto_stream_salsa208_messagebytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_salsa208" #.(lispify "crypto_stream_salsa208" 'function)) :int
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_salsa208_xor" #.(lispify "crypto_stream_salsa208_xor" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_salsa208_keygen" #.(lispify "crypto_stream_salsa208_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_stream_xsalsa20_KEYBYTES" 'constant) 32)

(cffi:defcfun ("crypto_stream_xsalsa20_keybytes" #.(lispify "crypto_stream_xsalsa20_keybytes" 'function)) :pointer)

(cl:defconstant #.(lispify "crypto_stream_xsalsa20_NONCEBYTES" 'constant) 24)

(cffi:defcfun ("crypto_stream_xsalsa20_noncebytes" #.(lispify "crypto_stream_xsalsa20_noncebytes" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_xsalsa20_messagebytes_max" #.(lispify "crypto_stream_xsalsa20_messagebytes_max" 'function)) :pointer)

(cffi:defcfun ("crypto_stream_xsalsa20" #.(lispify "crypto_stream_xsalsa20" 'function)) :int
  (c :pointer)
  (clen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_xsalsa20_xor" #.(lispify "crypto_stream_xsalsa20_xor" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_xsalsa20_xor_ic" #.(lispify "crypto_stream_xsalsa20_xor_ic" 'function)) :int
  (c :pointer)
  (m :pointer)
  (mlen :unsigned-long-long)
  (n :pointer)
  (ic :pointer)
  (k :pointer))

(cffi:defcfun ("crypto_stream_xsalsa20_keygen" #.(lispify "crypto_stream_xsalsa20_keygen" 'function)) :void
  (k :pointer))

(cl:defconstant #.(lispify "crypto_verify_16_BYTES" 'constant) 16)

(cffi:defcfun ("crypto_verify_16_bytes" #.(lispify "crypto_verify_16_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_verify_16" #.(lispify "crypto_verify_16" 'function)) :int
  (x :pointer)
  (y :pointer))

(cl:defconstant #.(lispify "crypto_verify_32_BYTES" 'constant) 32)

(cffi:defcfun ("crypto_verify_32_bytes" #.(lispify "crypto_verify_32_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_verify_32" #.(lispify "crypto_verify_32" 'function)) :int
  (x :pointer)
  (y :pointer))

(cl:defconstant #.(lispify "crypto_verify_64_BYTES" 'constant) 64)

(cffi:defcfun ("crypto_verify_64_bytes" #.(lispify "crypto_verify_64_bytes" 'function)) :pointer)

(cffi:defcfun ("crypto_verify_64" #.(lispify "crypto_verify_64" 'function)) :int
  (x :pointer)
  (y :pointer))

(cffi:defcstruct #.(lispify "randombytes_implementation" 'classname)
	(#.(lispify "implementation_name" 'slotname) :pointer)
	(#.(lispify "random" 'slotname) :pointer)
	(#.(lispify "stir" 'slotname) :pointer)
	(#.(lispify "uniform" 'slotname) :pointer)
	(#.(lispify "buf" 'slotname) :pointer)
	(#.(lispify "close" 'slotname) :pointer))

(cl:defconstant #.(lispify "randombytes_SEEDBYTES" 'constant) 32)

(cffi:defcfun ("randombytes_seedbytes" #.(lispify "randombytes_seedbytes" 'function)) :pointer)

(cffi:defcfun ("randombytes_buf" #.(lispify "randombytes_buf" 'function)) :void
  (buf :pointer)
  (size :unsigned-long-long))

(cffi:defcfun ("randombytes_buf_deterministic" #.(lispify "randombytes_buf_deterministic" 'function)) :void
  (buf :pointer)
  (size :pointer)
  (seed :pointer))

(cffi:defcfun ("randombytes_random" #.(lispify "randombytes_random" 'function)) :pointer)

(cffi:defcfun ("randombytes_uniform" #.(lispify "randombytes_uniform" 'function)) :pointer
  (upper_bound :pointer))

(cffi:defcfun ("randombytes_stir" #.(lispify "randombytes_stir" 'function)) :void)

(cffi:defcfun ("randombytes_close" #.(lispify "randombytes_close" 'function)) :int)

(cffi:defcfun ("randombytes_set_implementation" #.(lispify "randombytes_set_implementation" 'function)) :int
  (impl :pointer))

(cffi:defcfun ("randombytes_implementation_name" #.(lispify "randombytes_implementation_name" 'function)) :string)

(cffi:defcfun ("randombytes" #.(lispify "randombytes" 'function)) :void
  (buf :pointer)
  (buf_len :unsigned-long-long))

(cffi:defcvar ("randombytes_sysrandom_implementation" #.(lispify "randombytes_sysrandom_implementation" 'variable))
 #.(lispify "randombytes_implementation" 'classname))

(cffi:defcfun ("sodium_runtime_has_neon" #.(lispify "sodium_runtime_has_neon" 'function)) :int)

(cffi:defcfun ("sodium_runtime_has_sse2" #.(lispify "sodium_runtime_has_sse2" 'function)) :int)

(cffi:defcfun ("sodium_runtime_has_sse3" #.(lispify "sodium_runtime_has_sse3" 'function)) :int)

(cffi:defcfun ("sodium_runtime_has_ssse3" #.(lispify "sodium_runtime_has_ssse3" 'function)) :int)

(cffi:defcfun ("sodium_runtime_has_sse41" #.(lispify "sodium_runtime_has_sse41" 'function)) :int)

(cffi:defcfun ("sodium_runtime_has_avx" #.(lispify "sodium_runtime_has_avx" 'function)) :int)

(cffi:defcfun ("sodium_runtime_has_avx2" #.(lispify "sodium_runtime_has_avx2" 'function)) :int)

(cffi:defcfun ("sodium_runtime_has_avx512f" #.(lispify "sodium_runtime_has_avx512f" 'function)) :int)

(cffi:defcfun ("sodium_runtime_has_pclmul" #.(lispify "sodium_runtime_has_pclmul" 'function)) :int)

(cffi:defcfun ("sodium_runtime_has_aesni" #.(lispify "sodium_runtime_has_aesni" 'function)) :int)

(cffi:defcfun ("sodium_runtime_has_rdrand" #.(lispify "sodium_runtime_has_rdrand" 'function)) :int)

(cffi:defcfun ("_sodium_runtime_get_cpu_features" #.(lispify "_sodium_runtime_get_cpu_features" 'function)) :int)

(cffi:defcfun ("sodium_memzero" #.(lispify "sodium_memzero" 'function)) :void
  (pnt :pointer)
  (len :unsigned-long-long))

(cffi:defcfun ("sodium_stackzero" #.(lispify "sodium_stackzero" 'function)) :void
  (len :pointer))

(cffi:defcfun ("sodium_memcmp" #.(lispify "sodium_memcmp" 'function)) :int
  (b1_ :pointer)
  (b2_ :pointer)
  (len :pointer))

(cffi:defcfun ("sodium_compare" #.(lispify "sodium_compare" 'function)) :int
  (b1_ :pointer)
  (b2_ :pointer)
  (len :pointer))

(cffi:defcfun ("sodium_is_zero" #.(lispify "sodium_is_zero" 'function)) :int
  (n :pointer)
  (nlen :pointer))

(cffi:defcfun ("sodium_increment" #.(lispify "sodium_increment" 'function)) :void
  (n :pointer)
  (nlen :pointer))

(cffi:defcfun ("sodium_add" #.(lispify "sodium_add" 'function)) :void
  (a :pointer)
  (b :pointer)
  (len :pointer))

(cffi:defcfun ("sodium_sub" #.(lispify "sodium_sub" 'function)) :void
  (a :pointer)
  (b :pointer)
  (len :pointer))

(cffi:defcfun ("sodium_bin2hex" #.(lispify "sodium_bin2hex" 'function)) :string
  (hex :string)
  (hex_maxlen :pointer)
  (bin :pointer)
  (bin_len :pointer))

(cffi:defcfun ("sodium_hex2bin" #.(lispify "sodium_hex2bin" 'function)) :int
  (bin :pointer)
  (bin_maxlen :pointer)
  (hex :string)
  (hex_len :pointer)
  (ignore :string)
  (bin_len :pointer)
  (hex_end :pointer))

(cl:defconstant #.(lispify "sodium_base64_VARIANT_ORIGINAL" 'constant) 1)

(cl:defconstant #.(lispify "sodium_base64_VARIANT_ORIGINAL_NO_PADDING" 'constant) 3)

(cl:defconstant #.(lispify "sodium_base64_VARIANT_URLSAFE" 'constant) 5)

(cl:defconstant #.(lispify "sodium_base64_VARIANT_URLSAFE_NO_PADDING" 'constant) 7)

(cffi:defcfun ("sodium_base64_encoded_len" #.(lispify "sodium_base64_encoded_len" 'function)) :pointer
  (bin_len :pointer)
  (variant :int))

(cffi:defcfun ("sodium_bin2base64" #.(lispify "sodium_bin2base64" 'function)) :string
  (b64 :string)
  (b64_maxlen :pointer)
  (bin :pointer)
  (bin_len :pointer)
  (variant :int))

(cffi:defcfun ("sodium_base642bin" #.(lispify "sodium_base642bin" 'function)) :int
  (bin :pointer)
  (bin_maxlen :pointer)
  (b64 :string)
  (b64_len :pointer)
  (ignore :string)
  (bin_len :pointer)
  (b64_end :pointer)
  (variant :int))

(cffi:defcfun ("sodium_mlock" #.(lispify "sodium_mlock" 'function)) :int
  (addr :pointer)
  (len :pointer))

(cffi:defcfun ("sodium_munlock" #.(lispify "sodium_munlock" 'function)) :int
  (addr :pointer)
  (len :pointer))

(cffi:defcfun ("sodium_malloc" #.(lispify "sodium_malloc" 'function)) :pointer
  (size :pointer))

(cffi:defcfun ("sodium_allocarray" #.(lispify "sodium_allocarray" 'function)) :pointer
  (count :pointer)
  (size :pointer))

(cffi:defcfun ("sodium_free" #.(lispify "sodium_free" 'function)) :void
  (ptr :pointer))

(cffi:defcfun ("sodium_mprotect_noaccess" #.(lispify "sodium_mprotect_noaccess" 'function)) :int
  (ptr :pointer))

(cffi:defcfun ("sodium_mprotect_readonly" #.(lispify "sodium_mprotect_readonly" 'function)) :int
  (ptr :pointer))

(cffi:defcfun ("sodium_mprotect_readwrite" #.(lispify "sodium_mprotect_readwrite" 'function)) :int
  (ptr :pointer))

(cffi:defcfun ("sodium_pad" #.(lispify "sodium_pad" 'function)) :int
  (padded_buflen_p :pointer)
  (buf :pointer)
  (unpadded_buflen :pointer)
  (blocksize :pointer)
  (max_buflen :pointer))

(cffi:defcfun ("sodium_unpad" #.(lispify "sodium_unpad" 'function)) :int
  (unpadded_buflen_p :pointer)
  (buf :pointer)
  (padded_buflen :pointer)
  (blocksize :pointer))

(cffi:defcfun ("_sodium_alloc_init" #.(lispify "_sodium_alloc_init" 'function)) :int)

(define-string #.(lispify "SODIUM_VERSION_STRING" 'constant) "1.0.18")

(cl:defconstant #.(lispify "SODIUM_LIBRARY_VERSION_MAJOR" 'constant) 10)

(cl:defconstant #.(lispify "SODIUM_LIBRARY_VERSION_MINOR" 'constant) 3)

(cffi:defcfun ("sodium_version_string" #.(lispify "sodium_version_string" 'function)) :string)

(cffi:defcfun ("sodium_library_version_major" #.(lispify "sodium_library_version_major" 'function)) :int)

(cffi:defcfun ("sodium_library_version_minor" #.(lispify "sodium_library_version_minor" 'function)) :int)

(cffi:defcfun ("sodium_library_minimal" #.(lispify "sodium_library_minimal" 'function)) :int)


